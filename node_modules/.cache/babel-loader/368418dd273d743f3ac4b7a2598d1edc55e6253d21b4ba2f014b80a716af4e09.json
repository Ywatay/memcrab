{"ast":null,"code":"// Utility function to calculate the median\nexport const calculateMedian = numbers => {\n  const sortedNumbers = [...numbers].sort((a, b) => a - b);\n  const middleIndex = Math.floor(sortedNumbers.length / 2);\n  if (sortedNumbers.length % 2 === 0) {\n    return (sortedNumbers[middleIndex - 1] + sortedNumbers[middleIndex]) / 2;\n  }\n  return sortedNumbers[middleIndex];\n};","map":{"version":3,"names":["calculateMedian","numbers","sortedNumbers","sort","a","b","middleIndex","Math","floor","length"],"sources":["/home/user/memcrab/src/utils/calculateMedian.ts"],"sourcesContent":["// Utility function to calculate the median\nexport const calculateMedian = (numbers: number[]): number => {\n    const sortedNumbers = [...numbers].sort((a, b) => a - b);\n    const middleIndex = Math.floor(sortedNumbers.length / 2);\n  \n    if (sortedNumbers.length % 2 === 0) {\n      return (sortedNumbers[middleIndex - 1] + sortedNumbers[middleIndex]) / 2;\n    }\n  \n    return sortedNumbers[middleIndex];\n  };\n  "],"mappings":"AAAA;AACA,OAAO,MAAMA,eAAe,GAAIC,OAAiB,IAAa;EAC1D,MAAMC,aAAa,GAAG,CAAC,GAAGD,OAAO,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;EACxD,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACN,aAAa,CAACO,MAAM,GAAG,CAAC,CAAC;EAExD,IAAIP,aAAa,CAACO,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;IAClC,OAAO,CAACP,aAAa,CAACI,WAAW,GAAG,CAAC,CAAC,GAAGJ,aAAa,CAACI,WAAW,CAAC,IAAI,CAAC;EAC1E;EAEA,OAAOJ,aAAa,CAACI,WAAW,CAAC;AACnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
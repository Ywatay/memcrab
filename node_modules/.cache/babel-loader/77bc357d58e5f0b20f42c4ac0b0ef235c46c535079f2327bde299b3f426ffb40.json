{"ast":null,"code":"// Importing the Cell type\n\n// utils/generateMatrix.ts\nexport const generateMatrix = (numRows, numCols) => {\n  return Array.from({\n    length: numRows\n  }, (_, rowIndex) => Array.from({\n    length: numCols\n  }, (_, colIndex) => ({\n    id: rowIndex * numCols + colIndex,\n    // Simple unique ID generation\n    amount: Math.floor(Math.random() * 100) // Random amount for example\n  })));\n};","map":{"version":3,"names":["generateMatrix","numRows","numCols","Array","from","length","_","rowIndex","colIndex","id","amount","Math","floor","random"],"sources":["/home/user/memcrab/src/utils/generateMatrix.ts"],"sourcesContent":["import { Cell } from '../components/MatrixComponents/MatrixComponents'; // Importing the Cell type\n\n\n// utils/generateMatrix.ts\nexport const generateMatrix = (numRows: number, numCols: number): Cell[][] => {\n    return Array.from({ length: numRows }, (_, rowIndex) => \n      Array.from({ length: numCols }, (_, colIndex) => ({\n        id: rowIndex * numCols + colIndex, // Simple unique ID generation\n        amount: Math.floor(Math.random() * 100) // Random amount for example\n      }))\n    );\n  };\n  "],"mappings":"AAAwE;;AAGxE;AACA,OAAO,MAAMA,cAAc,GAAGA,CAACC,OAAe,EAAEC,OAAe,KAAe;EAC1E,OAAOC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEJ;EAAQ,CAAC,EAAE,CAACK,CAAC,EAAEC,QAAQ,KACjDJ,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEH;EAAQ,CAAC,EAAE,CAACI,CAAC,EAAEE,QAAQ,MAAM;IAChDC,EAAE,EAAEF,QAAQ,GAAGL,OAAO,GAAGM,QAAQ;IAAE;IACnCE,MAAM,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;EAC1C,CAAC,CAAC,CACJ,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
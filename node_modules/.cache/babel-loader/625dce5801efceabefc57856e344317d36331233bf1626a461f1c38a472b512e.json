{"ast":null,"code":"var _jsxFileName = \"/home/user/memcrab/src/components/MatrixTable/MatrixTable.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TableFooter, Paper, IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { calculateMedian } from '../../utils/calculateMedian';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MatrixTable = ({\n  matrix,\n  onCellUpdate,\n  onRemoveCell,\n  onRemoveRow,\n  onRemoveColumn\n}) => {\n  _s();\n  var _matrix$;\n  const [hoveredCell, setHoveredCell] = useState(null);\n  const [nearestCells, setNearestCells] = useState(new Set());\n  const [hoveredSumRowIndex, setHoveredSumRowIndex] = useState(null);\n  const numRows = matrix.length;\n  const numCols = ((_matrix$ = matrix[0]) === null || _matrix$ === void 0 ? void 0 : _matrix$.length) || 0;\n  const calculateRowSum = useCallback(row => {\n    return row.reduce((sum, cell) => sum + cell.amount, 0);\n  }, []);\n  const calculateRowAverages = useCallback(row => {\n    return row.length ? calculateRowSum(row) / row.length : 0;\n  }, []);\n  const extractColumnValues = useCallback((matrix, columnIndex) => {\n    return matrix.map(row => {\n      var _row$columnIndex;\n      return ((_row$columnIndex = row[columnIndex]) === null || _row$columnIndex === void 0 ? void 0 : _row$columnIndex.amount) || 0;\n    });\n  }, []);\n  const calculateColumnMedians = useCallback(() => {\n    const medians = [];\n    for (let col = 0; col < numCols; col++) {\n      const columnValues = extractColumnValues(matrix, col);\n      medians.push(calculateMedian(columnValues));\n    }\n    return medians;\n  }, [matrix, numCols, extractColumnValues]);\n  const findNearestCells = useCallback((cell, X) => {\n    const allCells = matrix.flat();\n    const sortedCells = allCells.map(c => ({\n      ...c,\n      distance: Math.abs(c.amount - cell.amount)\n    })).sort((a, b) => a.distance - b.distance).slice(0, X);\n    setNearestCells(new Set(sortedCells.map(c => c.id)));\n  }, [matrix]);\n  const handleCellClick = (rowIndex, colIndex) => {\n    const newAmount = matrix[rowIndex][colIndex].amount + 1;\n    onCellUpdate(rowIndex, colIndex, newAmount);\n  };\n  const handleCellMouseEnter = cell => {\n    setHoveredCell(cell);\n    findNearestCells(cell, 5); // Highlight 5 nearest cells, adjust as needed\n  };\n  const handleCellMouseLeave = () => {\n    setHoveredCell(null);\n    setNearestCells(new Set());\n  };\n  const handleSumCellMouseEnter = rowIndex => {\n    setHoveredSumRowIndex(rowIndex);\n  };\n  const handleSumCellMouseLeave = () => {\n    setHoveredSumRowIndex(null);\n  };\n  const handleRemoveCell = (rowIndex, colIndex) => {\n    onCellUpdate(rowIndex, colIndex, 0); // Set the cell's amount to 0\n  };\n  const handleRemoveRow = rowIndex => {\n    onRemoveRow(rowIndex); // Trigger row removal\n  };\n  const handleRemoveColumn = colIndex => {\n    onRemoveColumn(colIndex); // Trigger column removal\n  };\n  const columnMedians = calculateColumnMedians();\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [Array.from({\n            length: numCols\n          }, (_, colIndex) => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: [\"Cell Value N = \", colIndex + 1, /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => handleRemoveColumn(colIndex),\n              color: \"secondary\",\n              style: {\n                marginLeft: 8\n              },\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, colIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Row Sum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: [matrix.map((row, rowIndex) => {\n          const rowSum = calculateRowSum(row);\n          const rowAverage = calculateRowAverages(row);\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [row.map((cell, colIndex) => {\n              const percentage = rowSum ? cell.amount / rowSum * 100 : 0;\n              const isHoveredCell = (hoveredCell === null || hoveredCell === void 0 ? void 0 : hoveredCell.id) === cell.id;\n              const isHoveredRow = hoveredSumRowIndex === rowIndex;\n              return /*#__PURE__*/_jsxDEV(TableCell, {\n                onClick: () => handleCellClick(rowIndex, colIndex),\n                onMouseEnter: () => handleCellMouseEnter(cell),\n                onMouseLeave: handleCellMouseLeave,\n                style: {\n                  backgroundColor: nearestCells.has(cell.id) ? 'yellow' : 'transparent',\n                  backgroundImage: isHoveredRow ? `linear-gradient(to right, #00f ${percentage}%, #fff ${percentage}%)` : undefined,\n                  position: 'relative',\n                  padding: 0,\n                  // Remove padding to fit icon properly\n                  color: cell.amount === 0 ? 'transparent' : 'inherit' // Make text transparent if cell is empty\n                },\n                children: [isHoveredRow ? `${percentage.toFixed(2)}%` : cell.amount === 0 ? '-' : cell.amount, isHoveredCell && /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: e => {\n                    e.stopPropagation(); // Prevent triggering cell click\n                    handleRemoveCell(rowIndex, colIndex);\n                  },\n                  color: \"secondary\",\n                  style: {\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    zIndex: 1\n                  },\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 25\n                }, this)]\n              }, cell.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(TableCell, {\n              onMouseEnter: () => handleSumCellMouseEnter(rowIndex),\n              onMouseLeave: handleSumCellMouseLeave,\n              children: rowSum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleRemoveRow(rowIndex),\n                color: \"secondary\",\n                style: {\n                  position: 'relative',\n                  zIndex: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)]\n          }, rowIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [Array.from({\n            length: numCols\n          }, (_, colIndex) => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Average\"\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [columnMedians.map((median, colIndex) => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: median\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Median\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(MatrixTable, \"UTzZ10Gg55tsS+KpAAvhP7XcM3Q=\");\n_c = MatrixTable;\nexport default MatrixTable;\nvar _c;\n$RefreshReg$(_c, \"MatrixTable\");","map":{"version":3,"names":["React","useState","useCallback","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TableFooter","Paper","IconButton","DeleteIcon","calculateMedian","jsxDEV","_jsxDEV","MatrixTable","matrix","onCellUpdate","onRemoveCell","onRemoveRow","onRemoveColumn","_s","_matrix$","hoveredCell","setHoveredCell","nearestCells","setNearestCells","Set","hoveredSumRowIndex","setHoveredSumRowIndex","numRows","length","numCols","calculateRowSum","row","reduce","sum","cell","amount","calculateRowAverages","extractColumnValues","columnIndex","map","_row$columnIndex","calculateColumnMedians","medians","col","columnValues","push","findNearestCells","X","allCells","flat","sortedCells","c","distance","Math","abs","sort","a","b","slice","id","handleCellClick","rowIndex","colIndex","newAmount","handleCellMouseEnter","handleCellMouseLeave","handleSumCellMouseEnter","handleSumCellMouseLeave","handleRemoveCell","handleRemoveRow","handleRemoveColumn","columnMedians","component","children","Array","from","_","onClick","color","style","marginLeft","fileName","_jsxFileName","lineNumber","columnNumber","rowSum","rowAverage","percentage","isHoveredCell","isHoveredRow","onMouseEnter","onMouseLeave","backgroundColor","has","backgroundImage","undefined","position","padding","toFixed","e","stopPropagation","top","right","zIndex","median","_c","$RefreshReg$"],"sources":["/home/user/memcrab/src/components/MatrixTable/MatrixTable.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TableFooter, Paper, IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Cell } from '../../type/type';\nimport { calculateMedian } from '../../utils/calculateMedian';\n\ninterface MatrixTableProps {\n  matrix: Cell[][];\n  onCellUpdate: (rowIndex: number, colIndex: number, newAmount: number) => void;\n  onRemoveCell: (rowIndex: number, colIndex: number) => void;\n  onRemoveRow: (rowIndex: number) => void;\n  onRemoveColumn: (colIndex: number) => void;\n}\n\nconst MatrixTable: React.FC<MatrixTableProps> = ({ matrix, onCellUpdate, onRemoveCell, onRemoveRow, onRemoveColumn }) => {\n  const [hoveredCell, setHoveredCell] = useState<Cell | null>(null);\n  const [nearestCells, setNearestCells] = useState<Set<number>>(new Set());\n  const [hoveredSumRowIndex, setHoveredSumRowIndex] = useState<number | null>(null);\n\n  const numRows = matrix.length;\n  const numCols = matrix[0]?.length || 0;\n\n  const calculateRowSum = useCallback((row: Cell[]): number => {\n    return row.reduce((sum, cell) => sum + cell.amount, 0);\n  }, []);\n\n  const calculateRowAverages = useCallback((row: Cell[]): number => {\n    return row.length ? calculateRowSum(row) / row.length : 0;\n  }, []);\n\n  const extractColumnValues = useCallback((matrix: Cell[][], columnIndex: number): number[] => {\n    return matrix.map(row => row[columnIndex]?.amount || 0);\n  }, []);\n\n  const calculateColumnMedians = useCallback((): number[] => {\n    const medians: number[] = [];\n    for (let col = 0; col < numCols; col++) {\n      const columnValues = extractColumnValues(matrix, col);\n      medians.push(calculateMedian(columnValues));\n    }\n    return medians;\n  }, [matrix, numCols, extractColumnValues]);\n\n  const findNearestCells = useCallback((cell: Cell, X: number): void => {\n    const allCells = matrix.flat();\n    const sortedCells = allCells\n      .map(c => ({ ...c, distance: Math.abs(c.amount - cell.amount) }))\n      .sort((a, b) => a.distance - b.distance)\n      .slice(0, X);\n    \n    setNearestCells(new Set(sortedCells.map(c => c.id)));\n  }, [matrix]);\n\n  const handleCellClick = (rowIndex: number, colIndex: number) => {\n    const newAmount = matrix[rowIndex][colIndex].amount + 1;\n    onCellUpdate(rowIndex, colIndex, newAmount);\n  };\n\n  const handleCellMouseEnter = (cell: Cell) => {\n    setHoveredCell(cell);\n    findNearestCells(cell, 5); // Highlight 5 nearest cells, adjust as needed\n  };\n\n  const handleCellMouseLeave = () => {\n    setHoveredCell(null);\n    setNearestCells(new Set());\n  };\n\n  const handleSumCellMouseEnter = (rowIndex: number) => {\n    setHoveredSumRowIndex(rowIndex);\n  };\n\n  const handleSumCellMouseLeave = () => {\n    setHoveredSumRowIndex(null);\n  };\n\n  const handleRemoveCell = (rowIndex: number, colIndex: number) => {\n    onCellUpdate(rowIndex, colIndex, 0); // Set the cell's amount to 0\n  };\n\n  const handleRemoveRow = (rowIndex: number) => {\n    onRemoveRow(rowIndex); // Trigger row removal\n  };\n\n  const handleRemoveColumn = (colIndex: number) => {\n    onRemoveColumn(colIndex); // Trigger column removal\n  };\n\n  const columnMedians = calculateColumnMedians();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {Array.from({ length: numCols }, (_, colIndex) => (\n              <TableCell key={colIndex}>\n                Cell Value N = {colIndex + 1}\n                <IconButton\n                  onClick={() => handleRemoveColumn(colIndex)}\n                  color=\"secondary\"\n                  style={{ marginLeft: 8 }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </TableCell>\n            ))}\n            <TableCell>Row Sum</TableCell>\n            <TableCell>Actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {matrix.map((row, rowIndex) => {\n            const rowSum = calculateRowSum(row);\n            const rowAverage = calculateRowAverages(row);\n            return (\n              <TableRow key={rowIndex}>\n                {row.map((cell, colIndex) => {\n                  const percentage = rowSum ? (cell.amount / rowSum) * 100 : 0;\n                  const isHoveredCell = hoveredCell?.id === cell.id;\n                  const isHoveredRow = hoveredSumRowIndex === rowIndex;\n                  return (\n                    <TableCell\n                      key={cell.id}\n                      onClick={() => handleCellClick(rowIndex, colIndex)}\n                      onMouseEnter={() => handleCellMouseEnter(cell)}\n                      onMouseLeave={handleCellMouseLeave}\n                      style={{\n                        backgroundColor: nearestCells.has(cell.id) ? 'yellow' : 'transparent',\n                        backgroundImage: isHoveredRow ? `linear-gradient(to right, #00f ${percentage}%, #fff ${percentage}%)` : undefined,\n                        position: 'relative',\n                        padding: 0, // Remove padding to fit icon properly\n                        color: cell.amount === 0 ? 'transparent' : 'inherit' // Make text transparent if cell is empty\n                      }}\n                    >\n                      {isHoveredRow ? `${percentage.toFixed(2)}%` : (cell.amount === 0 ? '-' : cell.amount)}\n                      {isHoveredCell && (\n                        <IconButton\n                          onClick={(e) => {\n                            e.stopPropagation(); // Prevent triggering cell click\n                            handleRemoveCell(rowIndex, colIndex);\n                          }}\n                          color=\"secondary\"\n                          style={{\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            zIndex: 1,\n                          }}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      )}\n                    </TableCell>\n                  );\n                })}\n                <TableCell\n                  onMouseEnter={() => handleSumCellMouseEnter(rowIndex)}\n                  onMouseLeave={handleSumCellMouseLeave}\n                >\n                  {rowSum}\n                </TableCell>\n                <TableCell>\n                  <IconButton\n                    onClick={() => handleRemoveRow(rowIndex)}\n                    color=\"secondary\"\n                    style={{\n                      position: 'relative',\n                      zIndex: 1,\n                    }}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            );\n          })}\n          <TableRow>\n            {Array.from({ length: numCols }, (_, colIndex) => (\n              <TableCell key={colIndex}>Average</TableCell>\n            ))}\n            <TableCell />\n            <TableCell />\n          </TableRow>\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            {columnMedians.map((median, colIndex) => (\n              <TableCell key={colIndex}>{median}</TableCell>\n            ))}\n            <TableCell>Median</TableCell>\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default MatrixTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
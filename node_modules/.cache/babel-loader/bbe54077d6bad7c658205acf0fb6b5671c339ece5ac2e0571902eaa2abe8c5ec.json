{"ast":null,"code":"var _jsxFileName = \"/home/user/memcrab/src/components/MatrixComponents/MatrixComponents.tsx\",\n  _s = $RefreshSig$();\n// MatrixComponent.tsx\nimport React, { useEffect } from 'react';\nimport { useMatrix } from '../MatrixContext/MatrixContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MatrixComponent = () => {\n  _s();\n  const {\n    state,\n    setState\n  } = useMatrix();\n  useEffect(() => {\n    // Initialize matrix with dimensions M and N\n    setState(prevState => {\n      // Example dimensions, could be dynamic\n      const M = 5;\n      const N = 4;\n      const matrix = Array.from({\n        length: M\n      }, (_, rowIndex) => Array.from({\n        length: N\n      }, (_, colIndex) => ({\n        id: `${rowIndex}-${colIndex}`,\n        value: Math.floor(100 + Math.random() * 900)\n      })));\n      return {\n        ...prevState,\n        M,\n        N,\n        matrix\n      };\n    });\n  }, [setState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Matrix (\", state.M, \" x \", state.N, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: state.matrix.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: cell.value\n          }, cell.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(MatrixComponent, \"/YTqWgvKn9FEsX2eOmeGjhKNpFI=\", false, function () {\n  return [useMatrix];\n});\n_c = MatrixComponent;\nexport default MatrixComponent;\nvar _c;\n$RefreshReg$(_c, \"MatrixComponent\");","map":{"version":3,"names":["React","useEffect","useMatrix","jsxDEV","_jsxDEV","MatrixComponent","_s","state","setState","prevState","M","N","matrix","Array","from","length","_","rowIndex","colIndex","id","value","Math","floor","random","children","fileName","_jsxFileName","lineNumber","columnNumber","map","row","cell","_c","$RefreshReg$"],"sources":["/home/user/memcrab/src/components/MatrixComponents/MatrixComponents.tsx"],"sourcesContent":["// MatrixComponent.tsx\nimport React, { useEffect } from 'react';\nimport { useMatrix } from '../MatrixContext/MatrixContext';\n\nconst MatrixComponent: React.FC = () => {\n  const { state, setState } = useMatrix();\n\n  useEffect(() => {\n    // Initialize matrix with dimensions M and N\n    setState((prevState) => {\n      // Example dimensions, could be dynamic\n      const M = 5;\n      const N = 4;\n      const matrix = Array.from({ length: M }, (_, rowIndex) =>\n        Array.from({ length: N }, (_, colIndex) => ({\n          id: `${rowIndex}-${colIndex}`,\n          value: Math.floor(100 + Math.random() * 900),\n        }))\n      );\n      return { ...prevState, M, N, matrix };\n    });\n  }, [setState]);\n\n  return (\n    <div>\n      <h1>Matrix ({state.M} x {state.N})</h1>\n      <table>\n        <tbody>\n          {state.matrix.map((row, rowIndex) => (\n            <tr key={rowIndex}>\n              {row.map((cell) => (\n                <td key={cell.id}>{cell.value}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default MatrixComponent;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,eAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGN,SAAS,CAAC,CAAC;EAEvCD,SAAS,CAAC,MAAM;IACd;IACAO,QAAQ,CAAEC,SAAS,IAAK;MACtB;MACA,MAAMC,CAAC,GAAG,CAAC;MACX,MAAMC,CAAC,GAAG,CAAC;MACX,MAAMC,MAAM,GAAGC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEL;MAAE,CAAC,EAAE,CAACM,CAAC,EAAEC,QAAQ,KACnDJ,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEJ;MAAE,CAAC,EAAE,CAACK,CAAC,EAAEE,QAAQ,MAAM;QAC1CC,EAAE,EAAE,GAAGF,QAAQ,IAAIC,QAAQ,EAAE;QAC7BE,KAAK,EAAEC,IAAI,CAACC,KAAK,CAAC,GAAG,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG;MAC7C,CAAC,CAAC,CACJ,CAAC;MACD,OAAO;QAAE,GAAGd,SAAS;QAAEC,CAAC;QAAEC,CAAC;QAAEC;MAAO,CAAC;IACvC,CAAC,CAAC;EACJ,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,oBACEJ,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,GAAI,UAAQ,EAACjB,KAAK,CAACG,CAAC,EAAC,KAAG,EAACH,KAAK,CAACI,CAAC,EAAC,GAAC;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCxB,OAAA;MAAAoB,QAAA,eACEpB,OAAA;QAAAoB,QAAA,EACGjB,KAAK,CAACK,MAAM,CAACiB,GAAG,CAAC,CAACC,GAAG,EAAEb,QAAQ,kBAC9Bb,OAAA;UAAAoB,QAAA,EACGM,GAAG,CAACD,GAAG,CAAEE,IAAI,iBACZ3B,OAAA;YAAAoB,QAAA,EAAmBO,IAAI,CAACX;UAAK,GAApBW,IAAI,CAACZ,EAAE;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAkB,CACnC;QAAC,GAHKX,QAAQ;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIb,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACtB,EAAA,CAnCID,eAAyB;EAAA,QACDH,SAAS;AAAA;AAAA8B,EAAA,GADjC3B,eAAyB;AAqC/B,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}